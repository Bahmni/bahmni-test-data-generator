/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */
buildscript {
    System.setProperty("user.dir",getRootDir().toString())
}
plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
test {
    workingDir = rootProject.projectDir
}
dependencies {
    // Use JUnit test framework.
    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.5.1'

    implementation 'com.opencsv:opencsv:5.6'
    implementation ('com.github.javafaker:javafaker:1.0.2') //{ exclude module: 'org.yaml' }
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation 'org.apache.httpcomponents:httpmime:4.5.13'
    implementation 'org.json:json:20180813'
    implementation 'ca.uhn.hapi.fhir:hapi-fhir-base:5.7.9'
    implementation 'ca.uhn.hapi.fhir:hapi-fhir-structures-r4:5.7.9'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
}

application {
    // Define the main class for the application.
    mainClass = 'TestDataGenerator.TestDataGenApp'
    applicationDefaultJvmArgs = ['-DisGradle=true']
    run {
        systemProperties System.getProperties()

    }
}

test {
    useJUnitPlatform()
}
